{
  "_id": "luVmQCZiZSUTxBPa",
  "author": "MJAZjdKh3QKREKG2",
  "command": "/* ==========\n* MACRO: Token Manipulator\n* AUTHOR: Robak132\n* DESCRIPTION: Allows for quick token manipulations (disposition changes, system effects, showing weapons etc.)\n========== */\n\nclass TokenManipulator extends Dialog {\n  static OPERATIONS = [\n    {\n      id: \"show-weapons\",\n      name: \"Show Weapons\",\n      function: async (token) => {\n        if (!token.actor.items.find((e) => e.name === game.i18n.localize(\"MACROS-AND-MORE.ShowWeaponsEffect\"))) {\n          await this.createShowWeaponsEffect(token);\n        }\n      }\n    },\n    {\n      id: \"hide-weapons\",\n      name: \"Hide Weapons\",\n      function: async (token) => {\n        await this.removeShowWeaponsEffect(token);\n      }\n    },\n    {\n      id: \"toggle-weapons\",\n      name: \"Toggle Weapons\",\n      function: async (token) => {\n        if (!token.actor.items.find((e) => e.name === game.i18n.localize(\"MACROS-AND-MORE.ShowWeaponsEffect\"))) {\n          await this.createShowWeaponsEffect(token);\n        } else {\n          await this.removeShowWeaponsEffect(token);\n        }\n      }\n    },\n    {\n      id: \"delete-token-magic-filters\",\n      name: \"Delete TokenMagic Filters\",\n      function: async () => {\n        await TokenMagic.deleteFiltersOnSelected();\n      }\n    },\n    {\n      id: \"link-token\",\n      name: \"Link Token\",\n      function: async (token) => {\n        console.log(token.document);\n        await token.document.update({actorLink: true});\n        await game.actors.get(token.actor.id).prototypeToken.update({actorLink: true});\n      }\n    },\n    {\n      id: \"set-friendly-token\",\n      name: \"Set Friendly (Token only)\",\n      function: async (token) => {\n        await token.document.update({disposition: 1});\n        token.refresh(true);\n      }\n    },\n    {\n      id: \"set-friendly\",\n      name: \"Set Friendly\",\n      function: async (token) => {\n        await game.actors.get(token.actor.id).prototypeToken.update({disposition: 1});\n        await token.document.update({disposition: 1});\n        token.refresh(true);\n      }\n    },\n    {\n      id: \"set-neutral-token\",\n      function: async (token) => {\n        await token.document.update({disposition: 0});\n        token.refresh(true);\n      },\n      name: \"Set Neutral (Token only)\"\n    },\n    {\n      id: \"set-neutral\",\n      name: \"Set Neutral\",\n      function: async (token) => {\n        await game.actors.get(token.actor.id).prototypeToken.update({disposition: 0});\n        await token.document.update({disposition: 0});\n        token.refresh(true);\n      }\n    },\n    {\n      id: \"set-hostile-token\",\n      name: \"Set Hostile (Token only)\",\n      function: async (token) => {\n        await token.document.update({disposition: -1});\n        token.refresh(true);\n      }\n    },\n    {\n      id: \"set-hostile\",\n      name: \"Set Hostile\",\n      function: async (token) => {\n        await game.actors.get(token.actor.id).prototypeToken.update({disposition: -1});\n        await token.document.update({disposition: -1});\n        token.refresh(true);\n      }\n    },\n    {\n      id: \"toggle-infighting\",\n      name: \"Toggle Infighting\",\n      function: (token) => {\n        console.log(token.actor.effects);\n        if (token.actor.effects.find((e) => e.statuses.has(\"infighting\"))) {\n          token.actor.removeSystemEffect(\"infighting\");\n        } else {\n          token.actor.addSystemEffect(\"infighting\");\n        }\n      }\n    }\n  ];\n\n  static async run() {\n    return await this.wait(\n      {\n        title: \"Token Manipulator\",\n        content: `<div class=\"directory\">\n            <ol class=\"directory-list\">\n              ${this.OPERATIONS.map((item, i) => {\n                return `<li class=\"directory-item document flexrow\" data-index=\"${i}\" data-id=\"${item.id}\">\n                    <h4 class=\"document-name\"><a>${item.name}</a></h4>\n                  </li>`;\n              }).join(\"\")}\n            </ol>\n          </div>`,\n        buttons: [],\n        close: () => null\n      },\n      {\n        width: 250\n      }\n    );\n  }\n\n  activateListeners(html) {\n    super.activateListeners(html);\n    html.on(\"click\", \".document-name\", async (ev) => {\n      if (canvas.tokens.controlled.length) {\n        let document = $(ev.currentTarget).parents(\".document\")[0];\n        let id = document.dataset.id;\n        const operation = TokenManipulator.OPERATIONS.find((op) => op.id === id);\n        await this.close();\n        for (let token of canvas.tokens.controlled) {\n          await operation.function(token);\n        }\n      } else {\n        return ui.notifications.error(\"Select one or more tokens on which you want to run this macro\");\n      }\n    });\n  }\n\n  static async createShowWeaponsEffect(token) {\n    let data = (await fromUuid(\"Compendium.wfrp4e-macros-and-more.traits.Item.BGMmJNl1vemQuN7a\")).toObject();\n    data.name = game.i18n.localize(\"MACROS-AND-MORE.ShowWeaponsEffect\");\n    for (let effect of data.effects) {\n      effect.name = game.i18n.localize(\"MACROS-AND-MORE.ShowWeapons\");\n    }\n    await token.actor.createEmbeddedDocuments(\"Item\", [data]);\n  }\n\n  static async removeShowWeaponsEffect(token) {\n    let items = token.actor.items\n      .filter((e) => e.name === game.i18n.localize(\"MACROS-AND-MORE.ShowWeaponsEffect\"))\n      .map((e) => e._id);\n    if (items.length) {\n      await token.actor.deleteEmbeddedDocuments(\"Item\", items);\n    }\n\n    let effects = token.actor.effects.filter((e) => e.statuses.has(\"show-item\")).map((e) => e._id);\n    if (effects.length) {\n      await token.actor.deleteEmbeddedDocuments(\"ActiveEffect\", effects);\n    }\n  }\n}\n\nawait TokenManipulator.run();\n",
  "flags": {
    "wfrp4e-macros-and-more": {
      "version": "2.0.0",
      "sourceId": "luVmQCZiZSUTxBPa"
    }
  },
  "folder": null,
  "img": "modules/wfrp4e-macros-and-more/assets/icons/token-manipulator.svg",
  "name": "Token Manipulator",
  "scope": "global",
  "type": "script",
  "_key": "!macros!luVmQCZiZSUTxBPa"
}
