{
  "_id": "aLO0KCxITOp3g4X8",
  "author": "MJAZjdKh3QKREKG2",
  "command": "/* ==========\n* MACRO: Add XP\n* AUTHOR: Robak132\n* DESCRIPTION: Adds a set amount of XP to all or targeted player character(s). Adds half XP to companion(s). Modified macro from GM Toolkit by Jagusti.\n========== */\n\nconst Utility = game.robakMacros.utils;\nconst ConfigurableDialog = game.robakMacros.configurableDialog;\n\nfunction getCurrentDate() {\n  const currentDate = new Date();\n  const year = currentDate.getFullYear();\n  const month = (\"0\" + (currentDate.getMonth() + 1)).slice(-2);\n  const day = (\"0\" + currentDate.getDate()).slice(-2);\n  return year + \"-\" + month + \"-\" + day;\n}\n\nfunction updateActorXP(pc, XP, reason) {\n  const recipient = pc?.actor?.name || pc.name;\n  const XPTotal = pc?.details?.experience?.total;\n  const newXPTotal = Math.max(XPTotal + XP, 0);\n  const XPCurrent = pc?.details?.experience?.current || 0;\n  const newXPCurrent = Math.max(XPCurrent + XP, 0);\n\n  pc?.actor ? pc.actor.awardExp(XP, reason) : pc.awardExp(XP, reason);\n\n  return game.i18n.format(\"GMTOOLKIT.AddXP.Success\", {\n    recipient,\n    XPTotal,\n    newXPTotal,\n    XPCurrent,\n    newXPCurrent\n  });\n}\n\nlet characterActors = game.users.filter((u) => u.character).map((u) => u.character);\nlet otherActors = game.actors.filter((a) => a.hasPlayerOwner && a.type === \"character\" && !characterActors.includes(a));\n\nconst XP = Number(game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultAmount\"));\nlet reason =\n  game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultReason\") !== \"null\"\n    ? game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultReason\")\n    : \"\";\nif (reason) {\n  reason = game.settings.get(\"wfrp4e-gm-toolkit\", \"addXPDefaultReason\");\n  const session = game.gmtoolkit.utility.getSession();\n  reason = session.date ? reason.replace(\"(%date%)\", `(${getCurrentDate()})`) : reason.replace(\" (%date%)\", \"\");\n  reason = session.id !== \"null\" ? reason.replace(\"%session%\", session.id) : (reason = reason.replace(\"%session%\", \"\"));\n}\n\nconst options = game.user.getFlag(\"world\", \"add-exp-options\") ?? {};\nlet data = [\n  [{value: \"Players' Characters\"}],\n  ...game.users\n    .filter((u) => u.character)\n    .sort((a, b) => a.character.name.localeCompare(b.character.name))\n    .map((u, i) => {\n      return [\n        {\n          id: \"charactersEnabled\",\n          type: \"checkbox\",\n          value: options?.charactersEnabled?.[i] !== 0,\n          style: \"style='max-width: 10%'\"\n        },\n        {value: `${u.character.name}<br>(${u.name})`, style: \"style='max-width: 50%'\"},\n        {\n          id: \"charactersMod\",\n          type: \"select\",\n          style: \"style='max-width: 40%'\",\n          selected: options?.charactersMod?.[i] ?? 1,\n          value: [\n            {name: \"Character (Full Exp)\", value: 1},\n            {name: \"Companion (Half Exp)\", value: 0.5}\n          ]\n        }\n      ];\n    })\n];\nif (otherActors.length) {\n  data = data.concat([\n    [{value: \"Other Actors\"}],\n    ...otherActors\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .map((a, i) => {\n        return [\n          {\n            id: \"othersEnabled\",\n            type: \"checkbox\",\n            value: options?.othersEnabled?.[i] !== 0,\n            style: \"style='max-width: 10%'\"\n          },\n          {value: a.name, style: \"style='max-width: 50%'\"},\n          {\n            id: \"othersMod\",\n            type: \"select\",\n            style: \"style='max-width: 40%'\",\n            selected: options?.othersMod?.[i] ?? 0.5,\n            value: [\n              {name: \"Companion (Half Exp)\", value: 0.5},\n              {name: \"Character (Full Exp)\", value: 1}\n            ]\n          }\n        ];\n      })\n  ]);\n}\ndata = data.concat([\n  [{value: \"Options\"}],\n  [\n    {value: game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.Prompt\")},\n    {id: \"xpNumber\", type: \"input\", value: XP, inputType: \"number\"}\n  ],\n  [\n    {value: game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.Reason\")},\n    {id: \"xpReason\", type: \"input\", value: reason, inputType: \"text\"}\n  ]\n]);\n\nlet result = await ConfigurableDialog.create({\n  title: game.i18n.localize(\"GMTOOLKIT.Dialog.AddXP.Title\"),\n  data,\n  options: {width: 450}\n});\nif (result) {\n  await game.user.setFlag(\"world\", \"add-exp-options\", result);\n  let chatContent = characterActors.reduce((acc, actor, i) => {\n    if (!result.charactersEnabled[i]) return acc;\n    return acc + updateActorXP(actor, Utility.round(result.xpNumber * result.charactersMod[i], 0), result.xpReason);\n  }, \"\");\n  chatContent = otherActors.reduce((acc, actor, i) => {\n    if (!result.othersEnabled[i]) return acc;\n    return acc + updateActorXP(actor, Utility.round(result.xpNumber * result.othersMod[i], 0), result.xpReason);\n  }, chatContent);\n\n  const chatData = game.wfrp4e.utility.chatDataSetup(chatContent, \"selfroll\", false);\n  chatData.flavor = game.i18n.format(\"GMTOOLKIT.AddXP.Flavor\", {XP, reason});\n  await ChatMessage.create(chatData, {});\n}\n",
  "flags": {
    "wfrp4e-macros-and-more": {
      "version": "2.0.1",
      "sourceId": "aLO0KCxITOp3g4X8"
    }
  },
  "folder": null,
  "img": "modules/wfrp4e-macros-and-more/assets/icons/add-xp-with-companions.svg",
  "name": "Add XP",
  "scope": "global",
  "type": "script",
  "_key": "!macros!aLO0KCxITOp3g4X8"
}
