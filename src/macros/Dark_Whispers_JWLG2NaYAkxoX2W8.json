{
  "_id": "JWLG2NaYAkxoX2W8",
  "author": "MJAZjdKh3QKREKG2",
  "command": "/* ==========\n* MACRO: Send Dark Whispers\n* DESCRIPTION: Open a dialog to send a Dark Whisper (WFRP p183) to one or more selected player character(s).\n* TIP: Only player-assigned or player-owned characters with Corruption can be sent a Dark Whisper.\n* TIP: The placeholder whisper is drawn from the Dark Whispers table. Change this for different random whispers.\n* TIP: The whisper can be edited in the dialog, regardless of what is pre-filled from the Dark Whispers table.\n* TIP: Actor tokens that are targeted in a scene are pre-selected in the Send Dark Whisper dialog.\n========== */\n\nformDarkWhispers();\n\nasync function formDarkWhispers() {\n  // Setup: determine group of actors to be whispered to\n  const group = game.gmtoolkit.utility\n    .getGroup(game.settings.get(\"wfrp4e-gm-toolkit\", \"defaultGroupDarkWhispers\"))\n    .filter((g) => g.type === \"character\");\n  const targeted = game.gmtoolkit.utility\n    .getGroup(game.settings.get(\"wfrp4e-gm-toolkit\", \"defaultGroupDarkWhispers\"), {interaction: \"targeted\"})\n    .filter((g) => g.type === \"character\");\n  // Setup: exit with notice if there are no player-assigned characters\n  if (!group) {\n    return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Message.DarkWhispers.NoEligibleCharacters\"));\n  }\n  // Setup: exit with notice if there are no player-assigned characters with Corruption\n  if (!group.some((g) => g.system?.status?.corruption?.value > 0)) {\n    return ui.notifications.error(game.i18n.localize(\"GMTOOLKIT.Message.DarkWhispers.NoEligibleCharacters\"));\n  }\n\n  // Setup dialog content\n  // Build list of characters to select via dialog\n  let characters = group.reduce((acc, actor) => {\n    const actorId = actor?.actor?.id || actor.id;\n    if (!acc.some((c) => c.actorId === actorId)) {\n      acc.push({\n        actorId,\n        name: actor?.actor?.name || actor.name,\n        corruption: actor.system?.status?.corruption,\n        assignedUser: game.users.players.find((p) => p.character === actor),\n        owners: game.users.players.filter((p) => p.id in actor.ownership),\n        targeted: targeted.includes(actor)\n      });\n    }\n    return acc;\n  }, []);\n\n  // Build dialog content\n  let checkOptions = \"\";\n  for (const actor of characters) {\n    const canWhisperTo = actor.corruption.value\n      ? `enabled title=\"${game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.HasCorruption\")}\"`\n      : `disabled title=\"${game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.NoCorruption\")}\"`;\n    const checked = actor.targeted && actor.corruption.value ? \"checked\" : \"\";\n    const playerOwners = actor.owners.map((m) => m.name).join(\", \");\n    checkOptions += `\n      <div class=\"form-group\">\n        <input type=\"checkbox\" id=\"${actor.actorId}\" name=\"${actor.actorId}\" value=\"${actor.name}\" ${canWhisperTo} ${checked}>\n        <label for=\"${actor.actorId}\" title=\"${game.i18n.format(\"GMTOOLKIT.Dialog.DarkWhispers.PlayerTooltip\", {\n          assignedUser: actor.assignedUser?.name || game.i18n.localize(\"GMTOOLKIT.Dialog.None\"),\n          playerOwners: playerOwners\n        })}\">\n          <strong>${actor.name}</strong><br>\n          (${actor.assignedUser?.name || game.i18n.localize(\"GMTOOLKIT.Dialog.NotAssigned\")})\n        </label>\n        <label for=\"${actor.actorId}\"> ${actor.corruption.value} / ${actor.corruption.max} ${game.i18n.localize(\"NAME.Corruption\")} </label>\n      </div>\n    `;\n  }\n\n  const message = game.tables.getName(game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.Title\"))\n    ? await game.tables\n        .getName(game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.Title\"))\n        .draw({displayChat: false})\n        .then((w) => w.results[0].text)\n    : \"\";\n\n  new Dialog(\n    {\n      title: game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.Title\"),\n      content: `\n        <div class=\"form-group \">\n          <label for=\"targets\">${game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.WhisperTargets\")} </label>\n        </div>\n        ${checkOptions} \n        <div class=\"form-group message\">\n          <label for=\"message\">${game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.WhisperMessage\")}</label>\n        </div>\n        <div class=\"form-group\">\n          <textarea id=\"message\" name=\"message\" rows=\"4\" cols=\"50\">${message}</textarea>\n        </div>\n        <div class=\"form-group\">\n          <input type=\"checkbox\" id=\"sendToOwners\" name=\"sendToOwners\">\n          <label for=\"sendToOwners\">${game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.SendToOwners\")}</label>\n        </div>`,\n      buttons: {\n        cancel: {\n          label: game.i18n.localize(\"GMTOOLKIT.Dialog.Cancel\"),\n          callback: () => abortWhisper()\n        },\n        whisper: {\n          label: game.i18n.localize(\"GMTOOLKIT.Dialog.DarkWhispers.SendWhisper\"),\n          callback: (html) => {\n            const sendToOwners = html.find('[name=\"sendToOwners\"]')[0].checked;\n            const message = html.find('[name=\"message\"]')[0].value;\n            characters = characters.filter((c) => html.find(`[name = \"${c.actorId}\"]`)[0].checked);\n            if (!characters.length || !message) return abortWhisper();\n\n            let data = {\n              currentUser: game.user,\n              message,\n              characters,\n              sendToOwners\n            };\n            if (data.currentUser.isGM) {\n              game.robakMacros.utils.acceptDarkWhispersRequest(data);\n            } else {\n              return game.robakMacros.utils.sendMessage(\"darkWhispers\", data);\n            }\n          }\n        }\n      }\n    },\n    {width: 500}\n  ).render(true);\n}\n\nfunction abortWhisper() {\n  return ui.notifications.warn(\n    game.i18n.format(\"GMTOOLKIT.Message.DarkWhispers.WhisperAborted\", {currentUser: game.user.name}),\n    {console: false}\n  );\n}\n",
  "flags": {
    "wfrp4e-macros-and-more": {
      "version": "1.0.0",
      "sourceId": "JWLG2NaYAkxoX2W8"
    }
  },
  "folder": null,
  "img": "modules/wfrp4e-macros-and-more/assets/icons/dark-whispers.svg",
  "name": "Dark Whispers",
  "scope": "global",
  "type": "script",
  "_key": "!macros!JWLG2NaYAkxoX2W8"
}
