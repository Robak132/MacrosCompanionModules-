{
  "_id": "pbZ7tQT51RcpTedj",
  "author": "MJAZjdKh3QKREKG2",
  "command": "/* ==========\n* MACRO: Random Sea Weather Generator\n* VERSION: 2.0.0\n* AUTHOR: Robak132\n* DESCRIPTION: Generates weather with Sea of Claws rules.\n========== */\n\nclass Direction {\n  static NORTH = new Direction(0, 'North');\n  static EAST = new Direction(1, 'East');\n  static SOUTH = new Direction(2, 'South');\n  static WEST = new Direction(3, 'West');\n\n  static values = [\n    Direction.NORTH, Direction.EAST, Direction.SOUTH, Direction.WEST];\n\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  static fromKey(key) {\n    return Direction.values[key];\n  }\n\n  static fromValue(value) {\n    return Direction.values.find(e => e.value === value);\n  }\n\n  opposite() {\n    return Direction.values[(this.key + 2) % 4];\n  }\n\n  getAdj() {\n    return game.i18n.localize('SEA-WEATHER-GENERATOR.' + this.value + 'Adj');\n  }\n\n  getName() {\n    return game.i18n.localize('SEA-WEATHER-GENERATOR.' + this.value);\n  }\n}\n\nclass WindStrength {\n  static DOLDRUMS = new WindStrength(0, 'Doldrums');\n  static LIGHT_BREEZE = new WindStrength(1, 'LightBreeze');\n  static FRESH_BREEZE = new WindStrength(2, 'FreshBreeze');\n  static NEAR_GALE = new WindStrength(3, 'NearGale');\n  static STRONG_GALE = new WindStrength(4, 'StrongGale');\n  static VIOLENT_STORM = new WindStrength(5, 'ViolentStorm');\n\n  static values = [\n    WindStrength.DOLDRUMS,\n    WindStrength.LIGHT_BREEZE,\n    WindStrength.FRESH_BREEZE,\n    WindStrength.NEAR_GALE,\n    WindStrength.STRONG_GALE,\n    WindStrength.VIOLENT_STORM];\n\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  static fromKey(key) {\n    return WindStrength.values[key];\n  }\n\n  static fromValue(value) {\n    return WindStrength.values.find(e => e.value === value);\n  }\n\n  async randomChange() {\n    if (this.key === WindStrength.values.length - 1) {\n      return WindStrength.values[this.key - 1];\n    } else if (this.key === 0) {\n      return WindStrength.values[this.key + 1];\n    }\n\n    // Random change\n    if ((await new Roll('d2').roll()).total === 1) {\n      return WindStrength.values[this.key - 1];\n    } else {\n      return WindStrength.values[this.key + 1];\n    }\n  }\n\n  getName() {\n    return game.i18n.localize('SEA-WEATHER-GENERATOR.' + this.value);\n  }\n}\n\nclass Precipitation {\n  static NONE = new Precipitation(0, 'None');\n  static LIGHT = new Precipitation(1, 'Light');\n  static HEAVY = new Precipitation(2, 'Heavy');\n  static VERY_HEAVY = new Precipitation(3, 'VeryHeavy');\n\n  static values = [\n    Precipitation.NONE, Precipitation.LIGHT, Precipitation.HEAVY, Precipitation.VERY_HEAVY];\n\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  static fromKey(key) {\n    return Precipitation.values[key];\n  }\n\n  static fromValue(value) {\n    return Precipitation.values.find(e => e.value === value);\n  }\n\n  getName() {\n    return game.i18n.localize('SEA-WEATHER-GENERATOR.Precipitation.' + this.value);\n  }\n\n  getDescription() {\n    return game.i18n.localize(`SEA-WEATHER-GENERATOR.Precipitation.${this.value}Desc`);\n  }\n}\n\nclass Temperature {\n  static SWELTERING = new Temperature(0, 'Sweltering');\n  static HOT = new Temperature(1, 'Hot');\n  static COMFORTABLE = new Temperature(2, 'Comfortable');\n  static CHILLY = new Temperature(3, 'Chilly');\n  static BITTER = new Temperature(4, 'Bitter');\n\n  static values = [\n    Temperature.SWELTERING, Temperature.HOT, Temperature.COMFORTABLE, Temperature.CHILLY, Temperature.BITTER];\n\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  static fromKey(key) {\n    return Temperature.values[key];\n  }\n\n  static fromValue(value) {\n    return Temperature.values.find(e => e.value === value);\n  }\n\n  getName() {\n    return game.i18n.localize('SEA-WEATHER-GENERATOR.Temperature.' + this.value);\n  }\n\n  getDescription() {\n    return game.i18n.localize(`SEA-WEATHER-GENERATOR.Temperature.${this.value}Desc`);\n  }\n}\n\nclass Visibility {\n  static CLEAR = new Visibility(0, 'Clear');\n  static MISTY = new Visibility(1, 'Misty');\n  static FOGGY = new Visibility(2, 'Foggy');\n  static THICK_FOG = new Visibility(3, 'ThickFog');\n\n  static values = [\n    Visibility.CLEAR, Visibility.MISTY, Visibility.FOGGY, Visibility.THICK_FOG];\n\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  static fromKey(key) {\n    return Visibility.values[key];\n  }\n\n  static fromValue(value) {\n    return Visibility.values.find(e => e.value === value);\n  }\n\n  getName() {\n    return game.i18n.localize('SEA-WEATHER-GENERATOR.Visibility.' + this.value);\n  }\n\n  getDescription() {\n    return game.i18n.localize(`SEA-WEATHER-GENERATOR.Visibility.${this.value}Desc`);\n  }\n}\n\n// Tables\nconst MACRO = this;\nconst PRECIPITATION = [\n  {\n    min: 1,\n    result: Precipitation.NONE,\n  }, {\n    min: 7,\n    result: Precipitation.LIGHT,\n  }, {\n    min: 10,\n    result: Precipitation.HEAVY,\n  }, {\n    min: 11,\n    result: Precipitation.VERY_HEAVY,\n  }, {\n    min: 13,\n    result: Precipitation.HEAVY,\n  }, {\n    min: 14,\n    result: Precipitation.NONE,\n  }];\nconst TEMPERATURE = [\n  {\n    min: 1,\n    result: Temperature.SWELTERING,\n  }, {\n    min: 2,\n    result: Temperature.HOT,\n  }, {\n    min: 3,\n    result: Temperature.COMFORTABLE,\n  }, {\n    min: 9,\n    result: Temperature.CHILLY,\n  }, {\n    min: 13,\n    result: Temperature.BITTER,\n  }];\nconst VISIBILITY = [\n  {\n    min: 1,\n    result: Visibility.CLEAR,\n  }, {\n    min: 5,\n    result: Visibility.MISTY,\n  }, {\n    min: 9,\n    result: Visibility.FOGGY,\n  }, {\n    min: 10,\n    result: Visibility.THICK_FOG,\n  }, {\n    min: 11,\n    result: Visibility.MISTY,\n  }, {\n    min: 14,\n    result: Visibility.CLEAR,\n  }];\nconst WIND_STRENGTH = [\n  {\n    min: 1,\n    result: WindStrength.DOLDRUMS,\n  }, {\n    min: 2,\n    result: WindStrength.LIGHT_BREEZE,\n  }, {\n    min: 3,\n    result: WindStrength.FRESH_BREEZE,\n  }, {\n    min: 5,\n    result: WindStrength.NEAR_GALE,\n  }, {\n    min: 7,\n    result: WindStrength.STRONG_GALE,\n  }, {\n    min: 9,\n    result: WindStrength.VIOLENT_STORM,\n  }, {\n    min: 10,\n    result: WindStrength.NEAR_GALE,\n  }, {\n    min: 11,\n    result: WindStrength.FRESH_BREEZE,\n  }, {\n    min: 13,\n    result: WindStrength.LIGHT_BREEZE,\n  }, {\n    min: 14,\n    result: WindStrength.DOLDRUMS,\n  }];\nconst WIND_EFFECT = {\n  'Doldrums': {\n    'Tailwind': {\n      sail: {effect: 'BECALMED'},\n      other: {effect: 'BECALMED'},\n    },\n    'Sidewind': {\n      sail: {effect: 'BECALMED'},\n      other: {effect: 'BECALMED'},\n    },\n    'Headwind': {\n      sail: {effect: 'BECALMED'},\n      other: {effect: 'BECALMED'},\n    },\n  },\n  'LightBreeze': {\n    'Tailwind': {\n      sail: {modifier: 1},\n      other: {modifier: 1},\n    },\n    'Sidewind': {\n      sail: {modifier: 1},\n      other: {modifier: 1},\n    },\n    'Headwind': {\n      sail: {modifier: 0.9},\n      other: {modifier: 1},\n    },\n  },\n  'FreshBreeze': {\n    'Tailwind': {\n      sail: {modifier: 1.1},\n      other: {modifier: 1},\n    },\n    'Sidewind': {\n      sail: {\n        modifier: 0.1,\n        effect: 'TACK',\n      },\n      other: {modifier: 1},\n    },\n    'Headwind': {\n      sail: {modifier: 0.75},\n      other: {modifier: 1},\n    },\n  },\n  'NearGale': {\n    'Tailwind': {\n      sail: {modifier: 1.25},\n      other: {modifier: 1},\n    },\n    'Sidewind': {\n      sail: {\n        modifier: 0.25,\n        effect: 'TACK',\n      },\n      other: {modifier: 1},\n    },\n    'Headwind': {\n      sail: {modifier: 0.5},\n      other: {modifier: 0.9},\n    },\n  },\n  'StrongGale': {\n    'Tailwind': {\n      sail: {modifier: 1.25},\n      other: {modifier: 1.1},\n    },\n    'Sidewind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {modifier: 0.95},\n    },\n    'Headwind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {modifier: 0.75},\n    },\n  },\n  'ViolentStorm': {\n    'Tailwind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {effect: 'BATTEN_DOWN'},\n    },\n    'Sidewind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {effect: 'BATTEN_DOWN'},\n    },\n    'Headwind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {effect: 'BATTEN_DOWN'},\n    },\n  },\n};\nconst WIND_EFFECT_FLYING_JIB = {\n  'Doldrums': {\n    'Tailwind': {\n      sail: {effect: 'BECALMED'},\n      other: {effect: 'BECALMED'},\n    },\n    'Sidewind': {\n      sail: {effect: 'BECALMED'},\n      other: {effect: 'BECALMED'},\n    },\n    'Headwind': {\n      sail: {effect: 'BECALMED'},\n      other: {effect: 'BECALMED'},\n    },\n  },\n  'LightBreeze': {\n    'Tailwind': {\n      sail: {modifier: 1.1},\n      other: {modifier: 1},\n    },\n    'Sidewind': {\n      sail: {modifier: 1},\n      other: {modifier: 1},\n    },\n    'Headwind': {\n      sail: {modifier: 0.9},\n      other: {modifier: 1},\n    },\n  },\n  'FreshBreeze': {\n    'Tailwind': {\n      sail: {modifier: 1.25},\n      other: {modifier: 1},\n    },\n    'Sidewind': {\n      sail: {\n        modifier: 0.25,\n        effect: 'TACK',\n      },\n      other: {modifier: 1},\n    },\n    'Headwind': {\n      sail: {modifier: 0.75},\n      other: {modifier: 1},\n    },\n  },\n  'NearGale': {\n    'Tailwind': {\n      sail: {modifier: 1.25},\n      other: {modifier: 1},\n    },\n    'Sidewind': {\n      sail: {\n        modifier: 0.25,\n        effect: 'TACK',\n      },\n      other: {modifier: 1},\n    },\n    'Headwind': {\n      sail: {modifier: 0.5},\n      other: {modifier: 0.9},\n    },\n  },\n  'StrongGale': {\n    'Tailwind': {\n      sail: {modifier: 1.5},\n      other: {modifier: 1.1},\n    },\n    'Sidewind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {modifier: 0.95},\n    },\n    'Headwind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {modifier: 0.75},\n    },\n  },\n  'ViolentStorm': {\n    'Tailwind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {effect: 'BATTEN_DOWN'},\n    },\n    'Sidewind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {effect: 'BATTEN_DOWN'},\n    },\n    'Headwind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {effect: 'BATTEN_DOWN'},\n    },\n  },\n};\n\nfunction getWindDirectionTable(prevailingWind) {\n  return [\n    {\n      min: 1,\n      result: Direction.fromValue(prevailingWind),\n    }, {\n      min: 7,\n      result: Direction.NORTH,\n    }, {\n      min: 8,\n      result: Direction.SOUTH,\n    }, {\n      min: 9,\n      result: Direction.EAST,\n    }, {\n      min: 10,\n      result: Direction.WEST,\n    }];\n}\n\nfunction getWindName(shipDirection, windDirection) {\n  if (shipDirection === windDirection) {\n    return 'Headwind';\n  } else if (shipDirection === windDirection.opposite()) {\n    return 'Tailwind';\n  } else {\n    return 'Sidewind';\n  }\n}\n\nfunction getSeasonModifier(season) {\n  switch (season) {\n    case 'spring':\n    case 'autumn':\n      return 2;\n    case 'winter':\n      return 4;\n    default:\n      return 0;\n  }\n}\n\nfunction createWindRaport(windStrength, windDirection, windChangeRoll, timeOfDay, options) {\n  const shipDirection = Direction.fromValue(options.shipDirection);\n  const shiftDistance = options.shipSpeed * 6 + (options.shipSpeed % 2 === 1 ? 0.5 : 0);\n  const windName = getWindName(shipDirection, windDirection);\n  const WIND_EFFECT_TABLE = options.flyingJib === 'true' ? WIND_EFFECT_FLYING_JIB : WIND_EFFECT;\n  const windEffect = WIND_EFFECT_TABLE[windStrength.value][windName][options.shipPropulsion];\n  const modifier = game.robakMacros.utils.round((windEffect?.modifier ?? 1) * 100, 2);\n\n  let description = `<h2>${timeOfDay}</h2>`;\n  if (windChangeRoll) {\n    description += `<p><b>Wind change roll:</b> ${windChangeRoll}</p>`;\n  }\n  if (windStrength !== WindStrength.DOLDRUMS) {\n    description += `<p><b>Wind:</b> ${windDirection.getAdj()} ${windStrength.getName().toLowerCase()} (${windName})</p>`;\n  } else {\n    description += `<p><b>Wind:</b> ${windStrength.getName()}</p>`;\n  }\n  if (windStrength === WindStrength.STRONG_GALE || windStrength === WindStrength.VIOLENT_STORM) {\n    description += `<p><i>Every Human, Dwarf, Halfling, or Ogre Character should make a <b>Challenging (+0) Endurance</b> Test or suffer from sea sickness.</i></p>`;\n  }\n\n  switch (windEffect?.effect) {\n    case 'BECALMED':\n      description += `<p><b>Distance Travelled:</b> 0 mi (0%)</p>`;\n      return {\n        description,\n        normal: 0,\n        tack: 0,\n        drift: 0,\n      };\n    case 'TACK':\n      let tack = game.robakMacros.utils.round(shiftDistance * windEffect?.modifier, 2);\n      description += `\n        <p><b>Distance Travelled:</b> ${shiftDistance} mi (100%)</p>\n        <p><b>Distance Travelled (Tack):</b> +${tack} mi (+${modifier}%)</p>`;\n      return {\n        description,\n        normal: shiftDistance,\n        tack,\n        drift: 0,\n      };\n    case 'BATTEN_DOWN':\n      let drift = game.robakMacros.utils.round((windName.value === 'Tailwind' ? 1 : -1) * shiftDistance * 0.25, 2);\n      description += `\n        <p><b>Distance Travelled:</b> 0 mi (0%)</p>\n        <p><b>Distance Travelled (Drift):</b> ${drift} mi (25%)</p>`;\n      return {\n        description,\n        normal: 0,\n        tack: 0,\n        drift,\n      };\n    default:\n      description += `<p><b>Distance Travelled:</b> ${shiftDistance} mi (${modifier}%)</p>`;\n      return {\n        description,\n        normal: shiftDistance,\n        tack: 0,\n        drift: 0,\n      };\n  }\n}\n\nasync function submit(html) {\n  let options = new FormDataExtended(html[0].querySelector('form')).object;\n  let seasonModifier = getSeasonModifier(options.season);\n  let seaTemperatureModifier = options.seaTemperature === 'cold' ? 0 : -2;\n\n  let precipitation = options.precipitation !== 'Random'\n      ? Precipitation.fromValue(options.precipitation)\n      : (await game.robakMacros.utils.rollFromCodeObject({\n        table: PRECIPITATION,\n        dice: '1d10',\n        modifier: seasonModifier,\n      }))[0];\n  let temperature = options.temperature !== 'Random'\n      ? Temperature.fromValue(options.temperature)\n      : (await game.robakMacros.utils.rollFromCodeObject({\n        table: TEMPERATURE,\n        dice: '1d10',\n        modifier: seasonModifier + seaTemperatureModifier,\n      }))[0];\n  let visibility = options.visibility !== 'Random'\n      ? Visibility.fromValue(options.visibility)\n      : (await game.robakMacros.utils.rollFromCodeObject({\n        table: VISIBILITY,\n        dice: '1d10',\n        modifier: seasonModifier + seaTemperatureModifier,\n      }))[0];\n  let windDirection = options.windDirection !== 'Random'\n      ? Direction.fromValue(options.windDirection)\n      : (await game.robakMacros.utils.rollFromCodeObject({\n        table: getWindDirectionTable(options.prevailingWind),\n        dice: '1d10',\n      }))[0];\n  let windStrength = (await game.robakMacros.utils.rollFromCodeObject({\n    table: WIND_STRENGTH,\n    dice: '1d10',\n    modifier: seasonModifier,\n  }))[0];\n  if (options.lastWindStrength !== \"Random\") {\n    windStrength = WindStrength.fromValue(options.lastWindStrength)\n  }\n  if (options.windStrength !== \"Random\") {\n    windStrength = WindStrength.fromValue(options.windStrength)\n  }\n\n  let changeRoll = options.windStrength !== \"Random\" || options.lastWindStrength === 'Random' ? undefined : (await new Roll('d10').roll()).total;\n  let totalDistance = {\n    normal: 0,\n    tack: 0,\n    drift: 0,\n  };\n  let windReportsDesc = '';\n\n  for (let timeOfDay of ['Dawn', 'Midday', 'Dusk', 'Midnight']) {\n    if (changeRoll === 1) {\n      windStrength = await windStrength.randomChange();\n      options.lastWindStrength = `${windStrength.value}`;\n    }\n    let windReport = createWindRaport(windStrength, windDirection, changeRoll, timeOfDay, options);\n    totalDistance.normal += windReport.normal;\n    totalDistance.tack += windReport.tack;\n    totalDistance.drift += windReport.drift;\n    windReportsDesc += windReport.description;\n\n    changeRoll = (await new Roll('d10').roll()).total;\n  }\n\n  await MACRO.setFlag('world', 'sea-weather-generator-options', options);\n  ChatMessage.create({\n    content: `\n      <h1>Sea Weather Report</h1>\n      <p><b>Precipitation:</b> ${precipitation.getName()}</p>\n      <p><i>${precipitation.getDescription()}</i></p>\n      <p><b>Temperature:</b> ${temperature.getName()}</p>\n      <p><i>${temperature.getDescription()}</i></p>\n      <p><b>Visibility:</b> ${visibility.getName()}</p>\n      <p><i>${visibility.getDescription()}</i></p>\n      <h1>Wind Report</h1>\n      ${windReportsDesc}\n      <h1>Total Distance Travelled</h1>\n      <p><b>Base:</b> ${totalDistance.normal} mi</p>\n      ${totalDistance.tack === 0 ? '' : `<p><b>Additional Tack Distance:</b> ${totalDistance.tack} mi</p>`}\n      ${totalDistance.drift === 0 ? '' : `<p><b>Drift Distance:</b> ${totalDistance.drift} mi</p>`}`,\n    whisper: game.users.filter(u => u.isGM).map(u => u.id),\n  });\n}\n\nconst options = MACRO.getFlag('world', 'sea-weather-generator-options') ?? {\n  precipitation: 'Random',\n  temperature: 'Random',\n  visibility: 'Random',\n  windDirection: 'Random',\n  windStrength: 'Random',\n  lastWindStrength: 'Random',\n  prevailingWind: 'West',\n  seaTemperature: 'cold',\n  season: 'spring',\n  shipDirection: 'West',\n  shipPropulsion: 'sail',\n  shipSpeed: 8,\n  flyingJib: false,\n};\n\nnew Dialog({\n  title: `Random Sea Weather Generator`,\n  content: `<form>\n      <div class=\"form-group section-title\">\n        <label class=\"section-title\">Sea Weather Elements</label>\n      </div>\n      <div class=\"form-group\">\n        <label>Precipitation:</label>\n        <select name=\"precipitation\">\n          <option value=\"Random\" ${options.precipitation === 'Random' ? 'selected' : ''}>Random</option>\n          ${Precipitation.values.map(e => {\n            return `<option value=\"${e.value}\" ${options.precipitation === e.value ? 'selected' : ''}>${e.getName()}</option>`;\n          })}.join()\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Temperature:</label>\n        <select name=\"temperature\">\n          <option value=\"Random\" ${options.temperature === 'Random' ? 'selected' : ''}>Random</option>\n          ${Temperature.values.map(e => {\n            return `<option value=\"${e.value}\" ${options.temperature === e.value ? 'selected' : ''}>${e.getName()}</option>`;\n          })}.join()\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Visibility:</label>\n        <select name=\"visibility\">\n          <option value=\"Random\" ${options.visibility === 'Random' ? 'selected' : ''}>Random</option>\n          ${Visibility.values.map(e => {\n            return `<option value=\"${e.value}\" ${options.visibility === e.value ? 'selected' : ''}>${e.getName()}</option>`;\n          })}.join()\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Wind Direction:</label>\n        <select name=\"windDirection\">\n          <option value=\"Random\" ${options.windDirection === 'Random' ? 'selected' : ''}>Random</option>\n          ${Direction.values.map(e => {\n            return `<option value=\"${e.value}\" ${options.windDirection === e.value ? 'selected' : ''}>${e.getName()}</option>`;\n          })}.join()\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Wind Strength:</label>\n        <select name=\"windStrength\">\n          <option value=\"Random\" ${options.windStrength === 'Random' ? 'selected' : ''}>Random</option>\n          ${WindStrength.values.map(e => {\n            return `<option value=\"${e.value}\" ${options.windStrength === e.value ? 'selected' : ''}>${e.getName()}</option>`;\n          })}.join()\n        </select>\n      </div>\n      <div class=\"form-group section-title\">\n        <label class=\"section-title\">External Conditions</label>\n      </div>\n      <div class=\"form-group\">\n        <label>Season:</label>\n        <select name=\"season\">\n          <option value=\"spring\" ${options.season === 'spring' ? 'selected' : ''}>Spring</option>\n          <option value=\"summer\" ${options.season === 'summer' ? 'selected' : ''}>Summer</option>\n          <option value=\"autumn\" ${options.season === 'autumn' ? 'selected' : ''}>Autumn</option>\n          <option value=\"winter\" ${options.season === 'winter' ? 'selected' : ''}>Winter</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Sea Temperature:</label>\n        <select name=\"seaTemperature\">\n          <option value=\"cold\" ${options.seaTemperature === 'cold' ? 'selected' : ''}>Cold</option>\n          <option value=\"warm\" ${options.seaTemperature === 'warm' ? 'selected' : ''}>Warm</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Prevailing Winds Direction:</label>\n        <select name=\"prevailingWind\">\n          <option value=\"West\" ${options.prevailingWind === 'West' ? 'selected' : ''}>Westerly</option>\n          <option value=\"South\" ${options.prevailingWind === 'South' ? 'selected' : ''}>Southerly</option>\n          <option value=\"East\" ${options.prevailingWind === 'East' ? 'selected' : ''}>Easterly</option>\n          <option value=\"North\" ${options.prevailingWind === 'North' ? 'selected' : ''}>Northerly</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Wind Strength at Midnight:</label>\n        <select name=\"lastWindStrength\">\n          <option value=\"Random\" ${options.lastWindStrength === 'Random' ? 'selected' : ''}>Random</option>\n          ${WindStrength.values.map(e => {\n            return `<option value=\"${e.value}\" ${options.lastWindStrength === e.value ? 'selected' : ''}>${e.getName()}</option>`;\n          })}.join()\n        </select>\n      </div>\n      <div class=\"form-group section-title\">\n        <label class=\"section-title\">Ship</label>\n      </div>\n      <div class=\"form-group\">\n        <label>Ship Direction:</label>\n        <select name=\"shipDirection\">\n          <option value=\"West\" ${options.shipDirection === 'West' ? 'selected' : ''}>West</option>\n          <option value=\"South\" ${options.shipDirection === 'South' ? 'selected' : ''}>South</option>\n          <option value=\"East\" ${options.shipDirection === 'East' ? 'selected' : ''}>East</option>\n          <option value=\"North\" ${options.shipDirection === 'North' ? 'selected' : ''}>North</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Flying Jib:</label>\n        <select name=\"flyingJib\">\n          <option value=\"true\" ${options.flyingJib === \"true\" ? 'selected' : ''}>Equipped</option>\n          <option value=\"false\" ${options.flyingJib !== \"true\" ? 'selected' : ''}>Not Equipped</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Ship Propulsion:</label>\n        <select name=\"shipPropulsion\">\n          <option value=\"sail\" ${options.shipPropulsion === 'sail' ? 'selected' : ''}>Sail</option>\n          <option value=\"other\" ${options.shipPropulsion === 'other' ? 'selected' : ''}>Other</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Ship Speed:</label>\n        <input name=\"shipSpeed\" value=${options.shipSpeed} type=\"number\" min=\"0\">\n      </div>\n    </form>`,\n  buttons: {\n    no: {\n      icon: `<i class='fas fa-times'></i>`,\n      label: `Cancel`,\n    },\n    yes: {\n      icon: `<i class='fas fa-check'></i>`,\n      label: `Submit`,\n      callback: async (html) => await submit(html),\n    },\n  },\n  default: 'yes',\n}).render(true);\n",
  "flags": {
    "wfrp4e-macros-and-more": {
      "version": "1.1.1"
    }
  },
  "folder": null,
  "img": "modules/wfrp4e-macros-and-more/assets/icons/sea-weather-generator.svg",
  "name": "Weather Report (Sea)",
  "scope": "global",
  "type": "script",
  "_key": "!macros!pbZ7tQT51RcpTedj"
}
