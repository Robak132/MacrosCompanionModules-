{
  "_id": "pbZ7tQT51RcpTedj",
  "author": "MJAZjdKh3QKREKG2",
  "command": "/* ==========\n* MACRO: Random Sea Weather Generator\n* VERSION: 2.0.0\n* AUTHOR: Robak132\n* DESCRIPTION: Generates weather with Sea of Claws rules.\n========== */\n\nclass Direction {\n  static NORTH = new Direction(0, 'North');\n  static EAST = new Direction(1, 'East');\n  static SOUTH = new Direction(2, 'South');\n  static WEST = new Direction(3, 'West');\n\n  static values = [\n    Direction.NORTH, Direction.EAST, Direction.SOUTH, Direction.WEST];\n\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  static fromKey(key) {\n    return Direction.values[key];\n  }\n\n  opposite() {\n    return Direction.values[(this.key + 2) % 4];\n  }\n\n  getLocalisedAdj() {\n    return game.i18n.localize('SEA-WEATHER-GENERATOR.' + this.value + 'Adj');\n  }\n\n  getLocalisedName() {\n    return game.i18n.localize('SEA-WEATHER-GENERATOR.' + this.value);\n  }\n}\n\nclass WindStrength {\n  static DOLDRUMS = new WindStrength(0, 'Doldrums');\n  static LIGHT_BREEZE = new WindStrength(1, 'LightBreeze');\n  static FRESH_BREEZE = new WindStrength(2, 'FreshBreeze');\n  static NEAR_GALE = new WindStrength(3, 'NearGale');\n  static STRONG_GALE = new WindStrength(4, 'StrongGale');\n  static VIOLENT_STORM = new WindStrength(5, 'ViolentStorm');\n\n  static values = [\n    WindStrength.DOLDRUMS,\n    WindStrength.LIGHT_BREEZE,\n    WindStrength.FRESH_BREEZE,\n    WindStrength.NEAR_GALE,\n    WindStrength.STRONG_GALE,\n    WindStrength.VIOLENT_STORM];\n\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n  }\n\n  static fromKey(key) {\n    return WindStrength.values[key];\n  }\n\n  async randomChange() {\n    if (this.key === WindStrength.values.length - 1) {\n      return WindStrength.values[this.key - 1];\n    } else if (this.key === 0) {\n      return WindStrength.values[this.key + 1];\n    }\n\n    // Random change\n    if ((await new Roll('d2').roll()).total === 1) {\n      return WindStrength.values[this.key - 1];\n    } else {\n      return WindStrength.values[this.key + 1];\n    }\n  }\n\n  getLocalisedName() {\n    return game.i18n.localize('SEA-WEATHER-GENERATOR.' + this.value);\n  }\n}\n\n// Tables\nconst MACRO = this;\nconst PRECIPITATION = [\n  {\n    min: 1,\n    result: {\n      value: 'None',\n      description: '',\n    },\n  }, {\n    min: 7,\n    result: {\n      value: 'Light',\n      description: `–10 to Athletics, Climb, and Ranged (Blackpowder) Tests`,\n    },\n  }, {\n    min: 10,\n    result: {\n      value: 'Heavy',\n      description: `–20 to Athletics, Climb, and Ranged (Blackpowder) Tests, –10 to Leadership, Navigation, Perception, Row, and Sail Tests`,\n    },\n  }, {\n    min: 11,\n    result: {\n      value: 'Very Heavy',\n      description: `–30 to Athletics, Climb, and Ranged (Blackpowder) Tests, -20 to Leadership, Navigation, Perception, Row, and Sail Tests, –10 to all other Tests`,\n    },\n  }, {\n    min: 13,\n    result: {\n      value: 'Heavy',\n      description: `–20 to Athletics, Climb, and Ranged (Blackpowder) Tests, –10 to Leadership, Navigation, Perception, Row, and Sail Tests`,\n    },\n  }, {\n    min: 14,\n    result: {\n      value: 'None',\n      description: '',\n    },\n  }];\nconst TEMPERATURE = [\n  {\n    min: 1,\n    result: {\n      value: 'Sweltering',\n      description: 'Every two hours, make a <b>Challenging (+0) Endurance</b> Test. If the Test is failed, suffer the effects of Heat Exposure. Crew members must drink two gallons of water a day or else suffer from Thirst',\n    },\n  }, {\n    min: 2,\n    result: {\n      value: 'Hot',\n      description: 'Every four hours, make an <b>Average (+20) Endurance</b> Test. If the Test is failed, suffer the effects of Heat Exposure. Crew members must drink two gallons of water a day or else suffer from Thirst.',\n    },\n  }, {\n    min: 3,\n    result: {\n      value: 'Comfortable',\n      description: 'Moderately cool or warm, the temperature is tolerable and has no effect on the crew.',\n    },\n  }, {\n    min: 9,\n    result: {\n      value: 'Chilly',\n      description: 'Every four hours, make an <b>Average (+20) Endurance</b> Test. If the Test is failed, suffer the effects of Cold Exposure.',\n    },\n  }, {\n    min: 13,\n    result: {\n      value: 'Bitter',\n      description: 'Every two hours, make a <b>Challenging (+0) Endurance</b> Test. If the Test is failed, suffer effects of Cold Exposure.',\n    },\n  }];\nconst VISIBILITY = [\n  {\n    min: 1,\n    result: {\n      value: 'Clear',\n      description: '',\n    },\n  }, {\n    min: 5,\n    result: {\n      value: 'Misty',\n      description: 'Ranged Tests, Navigation Tests, and Perception Tests based on sight suffer from a –1 SL penalty if the target is more than 20 yards away.',\n    },\n  }, {\n    min: 9,\n    result: {\n      value: 'Foggy',\n      description: 'Ranged Tests, Navigation Tests, and Perception Tests based on sight suffer from a –2 SL penalty if the target is more than 10 yards away.',\n    },\n  }, {\n    min: 10,\n    result: {\n      value: 'Thick Fog',\n      description: 'Ranged Tests, Navigation Tests, and Perception Tests based on sight suffer from a –3 SL penalty if the target is more than 5 yards away.',\n    },\n  }, {\n    min: 11,\n    result: {\n      value: 'Misty',\n      description: 'Ranged Tests, Navigation Tests, and Perception Tests based on sight suffer from a –1 SL penalty if the target is more than 20 yards away.',\n    },\n  }, {\n    min: 14,\n    result: {\n      value: 'Clear',\n      description: '',\n    },\n  }];\nconst WIND_STRENGTH = [\n  {\n    min: 1,\n    result: WindStrength.DOLDRUMS,\n  }, {\n    min: 2,\n    result: WindStrength.LIGHT_BREEZE,\n  }, {\n    min: 3,\n    result: WindStrength.FRESH_BREEZE,\n  }, {\n    min: 5,\n    result: WindStrength.NEAR_GALE,\n  }, {\n    min: 7,\n    result: WindStrength.STRONG_GALE,\n  }, {\n    min: 9,\n    result: WindStrength.VIOLENT_STORM,\n  }, {\n    min: 10,\n    result: WindStrength.NEAR_GALE,\n  }, {\n    min: 11,\n    result: WindStrength.FRESH_BREEZE,\n  }, {\n    min: 13,\n    result: WindStrength.LIGHT_BREEZE,\n  }, {\n    min: 14,\n    result: WindStrength.DOLDRUMS,\n  }];\nconst WIND_EFFECT = {\n  'Doldrums': {\n    'Tailwind': {\n      sail: {effect: 'BECALMED'},\n      other: {effect: 'BECALMED'},\n    },\n    'Sidewind': {\n      sail: {effect: 'BECALMED'},\n      other: {effect: 'BECALMED'},\n    },\n    'Headwind': {\n      sail: {effect: 'BECALMED'},\n      other: {effect: 'BECALMED'},\n    },\n  },\n  'LightBreeze': {\n    'Tailwind': {\n      sail: {modifier: 1},\n      other: {modifier: 1},\n    },\n    'Sidewind': {\n      sail: {modifier: 1},\n      other: {modifier: 1},\n    },\n    'Headwind': {\n      sail: {modifier: 0.9},\n      other: {modifier: 1},\n    },\n  },\n  'FreshBreeze': {\n    'Tailwind': {\n      sail: {modifier: 1.1},\n      other: {modifier: 1},\n    },\n    'Sidewind': {\n      sail: {\n        modifier: 0.1,\n        effect: 'TACK',\n      },\n      other: {modifier: 1},\n    },\n    'Headwind': {\n      sail: {modifier: 0.75},\n      other: {modifier: 1},\n    },\n  },\n  'NearGale': {\n    'Tailwind': {\n      sail: {modifier: 1.25},\n      other: {modifier: 1},\n    },\n    'Sidewind': {\n      sail: {\n        modifier: 0.25,\n        effect: 'TACK',\n      },\n      other: {modifier: 1},\n    },\n    'Headwind': {\n      sail: {modifier: 0.5},\n      other: {modifier: 0.9},\n    },\n  },\n  'StrongGale': {\n    'Tailwind': {\n      sail: {modifier: 1.25},\n      other: {modifier: 1.1},\n    },\n    'Sidewind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {modifier: 0.95},\n    },\n    'Headwind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {modifier: 0.75},\n    },\n  },\n  'ViolentStorm': {\n    'Tailwind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {effect: 'BATTEN_DOWN'},\n    },\n    'Sidewind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {effect: 'BATTEN_DOWN'},\n    },\n    'Headwind': {\n      sail: {effect: 'BATTEN_DOWN'},\n      other: {effect: 'BATTEN_DOWN'},\n    },\n  },\n};\n\nfunction getWindDirectionTable(prevailingWind) {\n  return [\n    {\n      min: 1,\n      result: Direction.fromKey(prevailingWind),\n    }, {\n      min: 7,\n      result: Direction.NORTH,\n    }, {\n      min: 8,\n      result: Direction.SOUTH,\n    }, {\n      min: 9,\n      result: Direction.EAST,\n    }, {\n      min: 10,\n      result: Direction.WEST,\n    }];\n}\n\nfunction getWindName(shipDirection, windDirection) {\n  if (shipDirection === windDirection) {\n    return 'Headwind';\n  } else if (shipDirection === windDirection.opposite()) {\n    return 'Tailwind';\n  } else {\n    return 'Sidewind';\n  }\n}\n\nfunction getSeasonModifier(season) {\n  let seasonModifier = 0;\n  switch (season) {\n    case 'spring':\n    case 'autumn':\n      seasonModifier = 2;\n      break;\n    case 'winter':\n      seasonModifier = 4;\n      break;\n  }\n  return seasonModifier;\n}\n\nfunction addWindRaport(windStrength, windDirection, shipPropulsion, shipDirection, shipSpeed, windReports) {\n  let shiftDistance = shipSpeed * 6 + (shipSpeed % 2 === 1 ? 0.5 : 0);\n  let windName = getWindName(shipDirection, windDirection);\n  let windEffect = WIND_EFFECT[windStrength.value][windName][shipPropulsion];\n  let modifier = game.robakMacros.utils.round((windEffect?.modifier ?? 1) * 100, 2);\n\n  const windDirectionDesc= `<abbr title=\"${windDirection.getLocalisedName()} -> ${windDirection.opposite().getLocalisedName()}\">${windDirection.getLocalisedAdj()}</abbr>`;\n  const windStrengthDesc = windStrength.getLocalisedName()\n  if (windStrength !== WindStrength.DOLDRUMS) {\n    windReports.description += `<p><b>Wind:</b> ${windDirectionDesc} ${windStrengthDesc} (${windName})</p>`;\n  } else {\n    windReports.description += `<p><b>Wind:</b> ${windStrengthDesc}</p>`;\n  }\n\n  switch (windEffect?.effect) {\n    case 'BECALMED':\n      windReports.description += `<p><b>Distance Travelled:</b> 0 mi (0%)</p>`;\n      break;\n    case 'TACK':\n      let tack = game.robakMacros.utils.round(shiftDistance * windEffect?.modifier, 2)\n      windReports.tack = game.robakMacros.utils.round(windReports.tack + tack, 2);\n      windReports.normal += shiftDistance;\n      windReports.description += `\n        <p><b>Distance Travelled:</b> ${shiftDistance} mi (100%)</p>\n        <p><b>Distance Travelled (Tack):</b> +${tack} mi (+${modifier}%)</p>`;\n      break;\n    case 'BATTEN_DOWN':\n      let drift = game.robakMacros.utils.round((windName.value === 'Tailwind' ? 1 : -1) * shiftDistance * 0.25, 2)\n      windReports.drift = game.robakMacros.utils.round(windReports.drift + drift, 2);\n      windReports.description += `\n        <p><b>Distance Travelled:</b> 0 mi (0%)</p>\n        <p><b>Distance Travelled (Drift):</b> ${drift} mi (25%)</p>`;\n      break;\n    default:\n      windReports.normal += shiftDistance;\n      windReports.description += `<p><b>Distance Travelled:</b> ${shiftDistance} mi (${modifier}%)</p>`;\n      break;\n  }\n  if (windStrength === WindStrength.STRONG_GALE || windStrength === WindStrength.VIOLENT_STORM) {\n    windReports.description += `<p><i>Every Human, Dwarf, Halfling, or Ogre Character should make a <b>Challenging (+0) Endurance</b> Test or suffer from sea sickness.</i></p>`;\n  }\n  return windReports;\n}\n\nasync function submit(html) {\n  let options = new FormDataExtended(html[0].querySelector('form')).object;\n  let seasonModifier = getSeasonModifier(options.season);\n  let shipDirection = Direction.fromKey(parseInt(options.shipDirection));\n  let seaTemperatureModifier = options.seaTemperature === 'cold' ? 0 : -2;\n\n  let precipitation = (await game.robakMacros.utils.rollFromCodeObject({\n    table: PRECIPITATION,\n    dice: '1d10',\n    modifier: seasonModifier,\n  }))[0];\n  let temperature = (await game.robakMacros.utils.rollFromCodeObject({\n    table: TEMPERATURE,\n    dice: '1d10',\n    modifier: seasonModifier + seaTemperatureModifier,\n  }))[0];\n  let visibility = (await game.robakMacros.utils.rollFromCodeObject({\n    table: VISIBILITY,\n    dice: '1d10',\n    modifier: seasonModifier + seaTemperatureModifier,\n  }))[0];\n  let windDirection = (await game.robakMacros.utils.rollFromCodeObject({\n    table: getWindDirectionTable(options.prevailingWind),\n    dice: '1d10',\n  }))[0];\n  let windStrength = options.lastWindStrength !== '-1'\n      ? WindStrength.fromKey(parseInt(options.lastWindStrength))\n      : (await game.robakMacros.utils.rollFromCodeObject({\n        table: WIND_STRENGTH,\n        dice: '1d10',\n        modifier: seasonModifier,\n      }))[0];\n\n  let changeRoll;\n  let windReports = {\n    description: '',\n    normal: 0,\n    tack: 0,\n    drift: 0,\n  };\n  for (let timeOfDay of ['Dawn', 'Midday', 'Dusk', 'Midnight']) {\n    windReports.description += `<h2>${timeOfDay} ${changeRoll ? `(${changeRoll})` : ``}</h2>`;\n    windReports = addWindRaport(windStrength, windDirection, options.shipPropulsion, shipDirection, options.shipSpeed,\n        windReports);\n    changeRoll = (await new Roll('d10').roll()).total;\n    if (changeRoll === 1) {\n      windStrength = await windStrength.randomChange();\n    }\n    options.lastWindStrength = `${windStrength.key}`;\n  }\n\n  await MACRO.setFlag('world', 'sea-weather-generator-options', options);\n  ChatMessage.create({\n    content: `\n\t\t<h1>Sea Weather Report</h1>\n\t\t<p><b>Preciptation:</b> ${precipitation.value}</p>\n\t\t<p><i>${precipitation.description}</i></p>\n\t\t<p><b>Temperature:</b> ${temperature.value}</p>\n\t  <p><i>${temperature.description}</i></p>\n\t\t<p><b>Visibility:</b> ${visibility.value}</p>\n\t  <p><i>${visibility.description}</i></p>\n\t\t<h1>Winds</h1>\n    ${windReports.description}\t\t\n    <h1>Total Distance</h1>\n    <p><b>Distance Travelled:</b> ${windReports.normal} mi</p>\n    <p><b>Distance Travelled (Tack):</b> ${windReports.tack} mi</p>\n    <p><b>Distance Travelled (Drift):</b> ${windReports.drift} mi</p>`,\n    whisper: game.users.filter(u => u.isGM).map(u => u.id),\n  });\n}\n\nfunction main() {\n  const options = MACRO.getFlag('world', 'sea-weather-generator-options') ?? {\n    lastWindStrength: '-1',\n    prevailingWind: '3',\n    seaTemperature: 'cold',\n    season: 'spring',\n    shipDirection: '3',\n    shipPropulsion: 'sail',\n    shipSpeed: 8,\n  };\n  new Dialog({\n    title: `Random Sea Weather Generator`,\n    content: `<form>\n      <h3>External Conditions</h3>\n      <div class=\"form-group\">\n        <label>Season:</label>\n        <select name=\"season\">\n          <option value=\"spring\" ${options.season === \"spring\" ? \"selected\" : \"\"}>Spring</option>\n          <option value=\"summer\" ${options.season === \"summer\" ? \"selected\" : \"\"}>Summer</option>\n          <option value=\"autumn\" ${options.season === \"autumn\" ? \"selected\" : \"\"}>Autumn</option>\n          <option value=\"winter\" ${options.season === \"winter\" ? \"selected\" : \"\"}>Winter</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Sea Temperature:</label>\n        <select name=\"seaTemperature\">\n          <option value=\"cold\" ${options.seaTemperature === \"cold\" ? \"selected\" : \"\"}>Cold</option>\n          <option value=\"warm\" ${options.seaTemperature === \"warm\" ? \"selected\" : \"\"}>Warm</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Prevailing Winds Direction:</label>\n        <select name=\"prevailingWind\">\n          <option value=\"3\" ${options.prevailingWind === \"3\" ? \"selected\" : \"\"}>Westerly</option>\n          <option value=\"2\" ${options.prevailingWind === \"2\" ? \"selected\" : \"\"}>Southerly</option>\n          <option value=\"1\" ${options.prevailingWind === \"1\" ? \"selected\" : \"\"}>Easterly</option>\n          <option value=\"0\" ${options.prevailingWind === \"0\" ? \"selected\" : \"\"}>Northerly</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Wind Strength at Midnight:</label>\n        <select id=\"last-wind-strength\" name=\"lastWindStrength\">\n          <option value=\"-1\" ${options.lastWindStrength === \"-1\" ? \"selected\" : \"\"}>Random</option>\n          <option value=\"0\" ${options.lastWindStrength === \"0\" ? \"selected\" : \"\"}>Doldrums</option>\n          <option value=\"1\" ${options.lastWindStrength === \"1\" ? \"selected\" : \"\"}>Light Breeze</option>\n          <option value=\"2\" ${options.lastWindStrength === \"2\" ? \"selected\" : \"\"}>Fresh Breeze</option>\n          <option value=\"3\" ${options.lastWindStrength === \"3\" ? \"selected\" : \"\"}>Near Gale</option>\n          <option value=\"4\" ${options.lastWindStrength === \"4\" ? \"selected\" : \"\"}>Strong Gale</option>\n          <option value=\"5\" ${options.lastWindStrength === \"5\" ? \"selected\" : \"\"}>Violent Storm</option>\n        </select>\n      </div>\n      <h3>Ship</h3>\n      <div class=\"form-group\">\n        <label>Ship Direction:</label>\n        <select name=\"shipDirection\">\n          <option value=\"3\" ${options.shipDirection === \"3\" ? \"selected\" : \"\"}>West</option>\n          <option value=\"2\" ${options.shipDirection === \"2\" ? \"selected\" : \"\"}>South</option>\n          <option value=\"1\" ${options.shipDirection === \"1\" ? \"selected\" : \"\"}>East</option>\n          <option value=\"0\" ${options.shipDirection === \"0\" ? \"selected\" : \"\"}>North</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Ship Propulsion:</label>\n        <select name=\"shipPropulsion\">\n          <option value=\"sail\" ${options.shipPropulsion === \"sail\" ? \"selected\" : \"\"}>Sail</option>\n          <option value=\"other\" ${options.shipPropulsion === \"other\" ? \"selected\" : \"\"}>Other</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Ship Speed:</label>\n        <input name=\"shipSpeed\" value=${options.shipSpeed} type=\"number\" min=\"0\">\n      </div>\n    </form>`,\n    buttons: {\n      yes: {\n        icon: `<i class='fas fa-check'></i>`,\n        label: `Submit`,\n        callback: async (html) => await submit(html),\n      },\n      no: {\n        icon: `<i class='fas fa-times'></i>`,\n        label: `Cancel`,\n      },\n    },\n    default: 'yes',\n  }).render(true);\n}\n\nmain();\n",
  "flags": {
    "wfrp4e-macros-and-more": {
      "version": "1.1.1"
    }
  },
  "folder": null,
  "img": "modules/wfrp4e-macros-and-more/assets/icons/sea-weather-generator.svg",
  "name": "Weather Report (Sea)",
  "scope": "global",
  "type": "script",
  "_key": "!macros!pbZ7tQT51RcpTedj"
}
