{
  "_id": "pbZ7tQT51RcpTedj",
  "author": "MJAZjdKh3QKREKG2",
  "command": "/* ==========\n* MACRO: Random Weather Generator (Sea)\n* VERSION: 1.0\n* AUTHOR: Robak132\n* DESCRIPTION: Generate weather by Sea of Claws rules.\n========== */\n\nconst PRECIPITATION = [\n  {\n    min: 1,\n    result: {\n      value: 'None',\n      description: '',\n    },\n  }, {\n    min: 7,\n    result: {\n      value: 'Light',\n      description: `–10 to Athletics, Climb, and Ranged (Blackpowder) Tests`,\n    },\n  }, {\n    min: 10,\n    result: {\n      value: 'Heavy',\n      description: `–20 to Athletics, Climb, and Ranged (Blackpowder) Tests,<br>–10 to Leadership, Navigation, Perception, Row, and Sail Tests`,\n    },\n  }, {\n    min: 11,\n    result: {\n      value: 'Very Heavy',\n      description: `–30 to Athletics, Climb, and Ranged (Blackpowder) Tests,<br>-20 to Leadership, Navigation, Perception, Row, and Sail Tests,<br>–10 to all other Tests`,\n    },\n  }, {\n    min: 13,\n    result: {\n      value: 'Heavy',\n      description: `–20 to Athletics, Climb, and Ranged (Blackpowder) Tests,<br>–10 to Leadership, Navigation, Perception, Row, and Sail Tests`,\n    },\n  }, {\n    min: 14,\n    result: {\n      value: 'None',\n      description: '',\n    },\n  }];\nconst TEMPERATURE = [\n  {\n    min: 1,\n    result: {\n      value: 'Sweltering',\n      description: 'Every two hours, make a Challenging (+0) Endurance Test. If the Test is failed, suffer the effects of Heat Exposure. Crew members must drink two gallons of water a day or else suffer from Thirst',\n    },\n  }, {\n    min: 2,\n    result: {\n      value: 'Hot',\n      description: 'Every four hours, make an Average (+20) Endurance Test. If the Test is failed, suffer the effects of Heat Exposure. Crew members must drink two gallons of water a day or else suffer from Thirst.',\n    },\n  }, {\n    min: 3,\n    result: {\n      value: 'Comfortable',\n      description: 'Moderately cool or warm, the temperature is tolerable and has no effect on the crew.',\n    },\n  }, {\n    min: 9,\n    result: {\n      value: 'Chilly',\n      description: 'Every four hours, make an Average (+20) Endurance Test. If the Test is failed, suffer the effects of Cold Exposure.',\n    },\n  }, {\n    min: 13,\n    result: {\n      value: 'Bitter',\n      description: 'Every two hours, make a Challenging (+0) Endurance Test. If the Test is failed, suffer effects of Cold Exposure.',\n    },\n  }];\nconst VISIBILITY = [\n  {\n    min: 1,\n    result: {\n      value: 'Clear',\n      description: '',\n    },\n  }, {\n    min: 5,\n    result: {\n      value: 'Misty',\n      description: 'Ranged Tests, Navigation Tests, and Perception Tests based on sight suffer from a –1 SL penalty if the target is more than 20 yards away.',\n    },\n  }, {\n    min: 9,\n    result: {\n      value: 'Foggy',\n      description: 'Ranged Tests, Navigation Tests, and Perception Tests based on sight suffer from a –2 SL penalty if the target is more than 10 yards away.',\n    },\n  }, {\n    min: 10,\n    result: {\n      value: 'Thick Fog',\n      description: 'Ranged Tests, Navigation Tests, and Perception Tests based on sight suffer from a –3 SL penalty if the target is more than 5 yards away.',\n    },\n  }, {\n    min: 11,\n    result: {\n      value: 'Misty',\n      description: 'Ranged Tests, Navigation Tests, and Perception Tests based on sight suffer from a –1 SL penalty if the target is more than 20 yards away.',\n    },\n  }, {\n    min: 14,\n    result: {\n      value: 'Clear',\n      description: '',\n    },\n  }];\nconst WIND_STRENGTH = [\n  {\n    min: 1,\n    result: {\n      value: 'Doldrums',\n      description: '',\n    },\n  }, {\n    min: 2,\n    result: {\n      value: 'Light Breeze',\n      description: '',\n    },\n  }, {\n    min: 3,\n    result: {\n      value: 'Fresh Breeze',\n      description: '',\n    },\n  }, {\n    min: 5,\n    result: {\n      value: 'Near Gale',\n      description: '',\n    },\n  }, {\n    min: 7,\n    result: {\n      value: 'Strong Gale',\n      description: '',\n    },\n  }, {\n    min: 9,\n    result: {\n      value: 'Violent Storm',\n      description: '',\n    },\n  }, {\n    min: 10,\n    result: {\n      value: 'Near Gale',\n      description: '',\n    },\n  }, {\n    min: 11,\n    result: {\n      value: 'Fresh Breeze',\n      description: '',\n    },\n  }, {\n    min: 13,\n    result: {\n      value: 'Light Breeze',\n      description: '',\n    },\n  }, {\n    min: 14,\n    result: {\n      value: 'Doldrums',\n      description: '',\n    },\n  }];\nconst WIND_DIRECTION = [\n  {\n    min: 1,\n    result: {\n      value: 'Prevailing',\n      description: '',\n    },\n  }, {\n    min: 7,\n    result: {\n      value: 'Northerly',\n      description: '',\n    },\n  }, {\n    min: 8,\n    result: {\n      value: 'Southerly',\n      description: '',\n    },\n  }, {\n    min: 9,\n    result: {\n      value: 'Easterly',\n      description: '',\n    },\n  }, {\n    min: 10,\n    result: {\n      value: 'Westerly',\n      description: '',\n    },\n  }];\nconst WIND_NAME = {\n  'North': {\n    'Northerly': 'Headwind',\n    'Southerly': 'Tailwind',\n    'Easterly': 'Sidewind',\n    'Westerly': 'Sidewind',\n  },\n  'South': {\n    'Northerly': 'Tailwind',\n    'Southerly': 'Headwind',\n    'Easterly': 'Sidewind',\n    'Westerly': 'Sidewind',\n  },\n  'East': {\n    'Northerly': 'Sidewind',\n    'Southerly': 'Sidewind',\n    'Easterly': 'Headwind',\n    'Westerly': 'Tailwind',\n  },\n  'West': {\n    'Northerly': 'Sidewind',\n    'Southerly': 'Sidewind',\n    'Easterly': 'Tailwind',\n    'Westerly': 'Headwind',\n  },\n};\nconst WIND_EFFECT = {\n  'Doldrums': {\n    'Tailwind': 'Becalmed',\n    'Sidewind': 'Becalmed',\n    'Headwind': 'Becalmed',\n  },\n  'Light Breeze': {\n    'Tailwind': '+0%/+0%',\n    'Sidewind': '+0%/+0%',\n    'Headwind': '-10%/+0%',\n  },\n  'Fresh Breeze': {\n    'Tailwind': '+10%/+0%',\n    'Sidewind': 'Tack +10%/+0%',\n    'Headwind': '-25%/+0%',\n  },\n  'Near Gale': {\n    'Tailwind': '+25%/+0%',\n    'Sidewind': 'Tack +25%/+0%',\n    'Headwind': '-50%/-10%',\n  },\n  'Strong Gale': {\n    'Tailwind': '+25%/+10%',\n    'Sidewind': 'Batten Down/-5%',\n    'Headwind': 'Batten Down/-25%',\n  },\n  'Violent Storm': {\n    'Tailwind': 'Batten Down',\n    'Sidewind': 'Batten Down',\n    'Headwind': 'Batten Down',\n  },\n};\n\nasync function submit(html) {\n  let seasonModifier = 0;\n  const {\n    season,\n    boatDirection,\n    prevailingWindsDirection,\n    seaTemperature,\n  } = new FormDataExtended(html[0].querySelector('form')).object;\n  switch (season) {\n    case 'spring':\n    case 'autumn':\n      seasonModifier = 2;\n      break;\n    case 'winter':\n      seasonModifier = 4;\n      break;\n  }\n  let seaTemperatureModifier = seaTemperature === 'cold' ? 0 : -2;\n\n  let precipitation = (await game.robakMacros.utils.rollFromCodeObject({\n    table: PRECIPITATION,\n    dice: '1d10',\n    modifier: seasonModifier,\n  }))[0];\n  let temperature = (await game.robakMacros.utils.rollFromCodeObject({\n    table: TEMPERATURE,\n    dice: '1d10',\n    modifier: seasonModifier + seaTemperatureModifier,\n  }))[0];\n  let visibility = (await game.robakMacros.utils.rollFromCodeObject({\n    table: VISIBILITY,\n    dice: '1d10',\n    modifier: seasonModifier + seaTemperatureModifier,\n  }))[0];\n  let windStrength = (await game.robakMacros.utils.rollFromCodeObject({\n    table: WIND_STRENGTH,\n    dice: '7',\n    modifier: seasonModifier,\n  }))[0];\n  let windDirection = (await game.robakMacros.utils.rollFromCodeObject({\n    table: WIND_DIRECTION,\n    dice: '1d10',\n  }))[0];\n  if (windDirection.value === 'Prevailing') {\n    windDirection.value = prevailingWindsDirection;\n  }\n  let windName = WIND_NAME[boatDirection][windDirection.value];\n  let weatherReport = `\n\t\t<h1>Weather Report</h1>\n\t\t<p><b>Preciptation:</b> ${precipitation.value}</p>\n\t\t<p><i>${precipitation.description}</i></p>\n\t\t<p><b>Temperature:</b> ${temperature.value}</p>\n\t  <p><i>${temperature.description}</i></p>\n\t\t<p><b>Visibility:</b> ${visibility.value}</p>\n\t  <p><i>${visibility.description}</i></p>\n\t\t<h2>Winds</h2>\n\t\t<p><b>Strength:</b> ${windStrength.value}</p>\n\t\t<p><b>Direction:</b> ${windDirection.value} (${windName})</p>\n\t  <p><b>Effect:</b> ${WIND_EFFECT[windStrength.value][windName]}</p>`;\n  if (windStrength.value === \"Strong Gale\" || windStrength.value === \"Violent Storm\") {\n    weatherReport += `Every Human, Dwarf, Halfling, or Ogre Character should make a <b>Challenging (+0) Endurance</b> Test or suffer from sea sickness.`\n  }\n  ChatMessage.create({\n    content: weatherReport,\n    whisper: game.users.filter(u => u.isGM).map(u => u.id),\n  }, false);\n}\n\nnew Dialog({\n  title: `Random Wind Generator`,\n  content: `\n    <form>\n      <div class=\"form-group\">\n        <label>Season:</label>\n        <select id=\"season\" name=\"season\">\n          <option value=\"spring\">Spring</option>\n          <option value=\"summer\">Summer</option>\n          <option value=\"autumn\">Autumn</option>\n          <option value=\"winter\">Winter</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Boat Direction:</label>\n        <select id=\"boat-direction\" name=\"boatDirection\">\n          <option value=\"North\">North</option>\n          <option value=\"South\">South</option>\n          <option value=\"East\">East</option>\n          <option value=\"West\">West</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Prevailing Winds Direction:</label>\n        <select id=\"prevailing-winds-direction\" name=\"prevailingWindsDirection\">\n          <option value=\"Westerly\">Westerly</option>\n          <option value=\"Northerly\">Northerly</option>\n          <option value=\"Southerly\">Southerly</option>\n          <option value=\"Easterly\">Easterly</option>\n        </select>\n      </div>\n      <div class=\"form-group\">\n        <label>Sea Temperature:</label>\n        <select id=\"sea-temperature\" name=\"seaTemperature\">\n          <option value=\"cold\">Cold</option>\n          <option value=\"warm\">Warm</option>\n        </select>\n      </div>\n    </form>\n    `,\n  buttons: {\n    yes: {\n      icon: '<i class=\\'fas fa-check\\'></i>',\n      label: `Submit`,\n      callback: async (html) => await submit(html),\n    },\n    no: {\n      icon: '<i class=\\'fas fa-times\\'></i>',\n      label: `Cancel`,\n    },\n  },\n  default: 'yes',\n}).render(true);",
  "flags": {
    "wfrp4e-macros-and-more": {
      "version": "1.1"
    }
  },
  "folder": null,
  "img": "modules/wfrp4e-macros-and-more/assets/icons/sea-weather-generator.svg",
  "name": "Weather Report (Sea)",
  "scope": "global",
  "type": "script",
  "_key": "!macros!pbZ7tQT51RcpTedj"
}
