{
  "_id": "BcFZlpf41SZBPFlq",
  "author": "MJAZjdKh3QKREKG2",
  "command": "/* ==========\n* MACRO: Coin converter\n* AUTHOR: Robak132\n* DESCRIPTION: Sets multipliers on player's currencies based on current location. Based on Old World Armoury rules [2ed].\n========== */\n\nconst NATIONS = {\n  empire: \"Empire\",\n  bretonnia: \"Bretonnia\",\n  estalia: \"Estalia\",\n  kislev: \"Kislev\",\n  norsca: \"Norsca\",\n  tilea: \"Tilea\",\n  dwarf: \"Dwarf Keeps\",\n  elf: \"Elf Kingdoms\",\n  araby: \"Araby\",\n};\nconst DATA = [\n  [1.00, 1.05, 1.10, 1.10, 1.00, 0.80, 0.90, 1.05, 1.10],\n  [0.95, 1.00, 1.05, 1.10, 1.00, 0.85, 0.85, 1.00, 1.05],\n  [0.90, 0.95, 1.00, 0.90, 1.00, 0.90, 0.80, 1.00, 1.00],\n  [0.90, 0.95, 1.10, 1.00, 0.95, 0.90, 0.90, 1.05, 1.10],\n  [0.70, 0.80, 0.90, 0.95, 1.00, 1.00, 0.80, 0.90, 1.00],\n  [0.50, 0.70, 0.80, 0.90, 1.00, 1.00, 0.00, 1.20, 0.90],\n  [1.20, 1.30, 1.40, 1.00, 0.80, 1.50, 1.00, 1.00, 0.80],\n  [0.95, 1.00, 1.05, 1.05, 0.95, 1.20, 1.00, 1.00, 0.95],\n  [0.90, 0.95, 1.00, 1.10, 1.00, 0.90, 1.20, 1.05, 1.00],\n];\n\nmain();\n\nfunction getIdx(location) {\n  return Object.keys(NATIONS).indexOf(location);\n}\n\nasync function main() {\n  await new Dialog({\n    title: \"Coin converter\",\n    content: `\n     <form>\n      <div class=\"form-group\">\n        <select style=\"text-align: center\" name=\"currentLocation\">\n          ${Object.entries(NATIONS).map((entry) => `<option value=\"${entry[0]}\">${entry[1]}</option>`).join(\"\")}\n        </select>\n      </div>\n    </form>`,\n    buttons: {\n      no: {\n        icon: `<i class=\"fas fa-times\"></i>`,\n        label: \"Cancel\",\n      },\n      yes: {\n        icon: `<i class=\"fas fa-check\"></i>`,\n        label: \"Next\",\n        callback: async (html) => {\n          let currentLocation = html.find(\"[name=\\\"currentLocation\\\"]\").val();\n          await submit(currentLocation);\n        },\n      },\n    },\n    default: \"yes\",\n  }).render(true);\n}\n\nfunction extractDataFromCoin(money) {\n  let updates = {};\n  let coinValue = money.system.coinValue.value;\n  let location = money.flags[\"wfrp4e-macros-and-more\"].moneyLocation;\n  if (location === undefined) {\n    updates[\"flags.wfrp4e-macros-and-more.moneyLocation\"] = \"empire\";\n    location = \"empire\";\n  }\n  let baseCoinValue = money.flags[\"wfrp4e-macros-and-more\"].moneyBaseValue;\n  if (baseCoinValue === undefined) {\n    updates[\"flags.wfrp4e-macros-and-more.moneyBaseValue\"] = money.system.coinValue.value;\n    baseCoinValue = coinValue;\n  }\n  money.update(updates);\n  return {\n    location,\n    coinValue,\n    baseCoinValue,\n  };\n}\n\nasync function submit(currentLocation) {\n  let coinUpdates = [];\n\n  let currentLocationIdx = getIdx(currentLocation);\n  let content = `<div style=\"overflow-y: scroll;max-height: 500px\">`;\n  for (let actor of game.actors) {\n    if (!actor._itemTypes.money.length) {\n      continue;\n    }\n\n    let moneyContent = \"\";\n    for (let money of actor._itemTypes.money) {\n      const {\n        location,\n        coinValue,\n        baseCoinValue,\n      } = extractDataFromCoin(money);\n      let convertedValue = Math.round(DATA[getIdx(location)][currentLocationIdx] * baseCoinValue);\n\n      if (money.system.quantity.value === 0 || convertedValue === coinValue) {\n        continue;\n      }\n\n      moneyContent += `<div class=\"form-group\">\n        <span style=\"flex: 5;text-align: center\">${money.name}</span>\n        <span style=\"flex: 3;text-align: center\">${NATIONS[location]}</span>\n        <span style=\"flex: 1;text-align: center\">${coinValue}</span>\n        <span style=\"flex: 1;text-align: center\">&#8594;</span>\n        <span style=\"flex: 1;text-align: center\">${convertedValue}</span>\n      </div>`;\n\n      coinUpdates.push({object: money, value: convertedValue});\n    }\n    if (moneyContent !== \"\") {\n      content += `<p style=\"text-align: center\">${actor.name}</p>` + moneyContent;\n    }\n  }\n  content += \"</div>\";\n\n  await new Dialog({\n    title: `Current Location: ${NATIONS[currentLocation]}`,\n    content: content,\n    buttons: {\n      no: {\n        icon: `<i class=\"fas fa-times\"></i>`,\n        label: \"Cancel\",\n      },\n      yes: {\n        icon: `<i class=\"fas fa-check\"></i>`,\n        label: \"Proceed\",\n        callback: async () => {\n          for (let entry of coinUpdates) {\n            await entry.object.update({\"system.coinValue.value\": entry.value});\n          }\n        },\n      },\n    },\n    default: \"yes\",\n  }).render(true);\n\n}",
  "flags": {
    "wfrp4e-macros-and-more": {
      "version": "1.0.0"
    }
  },
  "folder": null,
  "img": "modules/wfrp4e-macros-and-more/assets/icons/sea-weather-generator.svg",
  "name": "Set Default Currency",
  "scope": "global",
  "type": "script",
  "_key": "!macros!BcFZlpf41SZBPFlq"
}
