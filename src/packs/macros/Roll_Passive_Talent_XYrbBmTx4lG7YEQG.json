{
  "_id": "XYrbBmTx4lG7YEQG",
  "author": "MJAZjdKh3QKREKG2",
  "command": "/* ==========\n* MACRO: Roll Passive Talent\n* AUTHOR: Robak132\n* DESCRIPTION: Allows for easier interaction with passive talents like Sixth Sense and Trapper.\n========== */\n\nnew Dialog({\n  title: \"Random Vampire Weaknesses\",\n  content: `\n    <form>\n      <div class=\"form-group\">\n        <label>Do you want to hide all Dialogs?</label>\n    </form>\n    `,\n  buttons: {\n    yes: {\n      icon: \"<i class='fas fa-check'></i>\",\n      label: \"Yes\",\n      callback: async () => await passiveTalentMacro(true)\n    },\n    no: {\n      icon: \"<i class='fas fa-times'></i>\",\n      label: \"No\",\n      callback: async () => await passiveTalentMacro(false)\n    }\n  },\n  default: \"yes\"\n}).render(true);\n\nconst PASSIVE_TALENTS = [\n  {\n    talent: game.i18n.localize(\"NAME.SixthSense\"),\n    skill: game.i18n.localize(\"NAME.Intuition\")\n  },\n  {\n    talent: game.i18n.localize(\"NAME.Trapper\"),\n    skill: game.i18n.localize(\"NAME.Perception\")\n  },\n  {\n    talent: game.i18n.localize(\"NAME.NoseForTrouble\"),\n    skill: game.i18n.localize(\"NAME.Intuition\")\n  }\n];\n\nasync function passiveTalentMacro(hideDialogs) {\n  if (!game.user.isGM) {\n    ui.notifications.error(game.i18n.localize(\"MACROS-AND-MORE.NoPermission\"));\n    return;\n  }\n  let msg = \"\";\n  for (const {skill, talent} of PASSIVE_TALENTS) {\n    const targetGroup = game.actors\n      .filter((a) => a.hasPlayerOwner && a.type !== \"vehicle\" && a.itemTypes.talent.some((i) => i.name === talent))\n      .map((g) => g.uuid);\n    if (targetGroup.length === 0) {\n      continue;\n    }\n\n    await game.settings.set(\"wfrp4e-macros-and-more\", \"passiveTests\", []);\n    for (const member of targetGroup) {\n      if (member === null) {\n        continue;\n      }\n      let actor = await fromUuid(member);\n      actor = actor?.actor ? actor.actor : actor;\n      await runActorTest(actor, skill, talent, hideDialogs);\n    }\n    msg += await catchGroupTestResults(skill, talent);\n  }\n\n  await ChatMessage.create({\n    content: msg,\n    whisper: game.users.filter((u) => u.isGM).map((u) => u.id)\n  });\n}\n\nasync function catchGroupTestResults(skill, talent) {\n  let groupTestResultsMessage = `<h3>${talent}: <strong>${skill}</strong></h3>`;\n  for (const testResult of await game.settings.get(\"wfrp4e-macros-and-more\", \"passiveTests\")) {\n    groupTestResultsMessage += `${testResult.outcome !== \"success\" ? \"\" : \"<i class='fas fa-check'></i> \"}\n      <strong>${testResult.actor.name}:</strong> <strong>${testResult.sl} SL</strong> (${testResult.roll} vs ${testResult.target})</br>`;\n  }\n  return groupTestResultsMessage;\n}\n\nasync function runActorTest(actor, skill, talent, hideDialogs) {\n  let actorSkill = actor.items.find((i) => i.type === \"skill\" && i.name === skill);\n  const actorTalentLevel = actor.items.filter((i) => i.type === \"talent\" && i.name === talent).length;\n  const setupData = {\n    bypass: hideDialogs,\n    testModifier: 0,\n    rollMode: \"blindroll\",\n    absolute: {\n      difficulty: \"challenging\",\n      successBonus: actorTalentLevel\n    },\n    passiveTest: true,\n    title: `Test: ${talent} (${actorSkill?.name})`\n  };\n\n  if (actorSkill !== undefined) {\n    return (await actor.setupSkill(actorSkill, setupData)).roll();\n  } else {\n    actorSkill = await game.wfrp4e.utility.findSkill(skill);\n    const skillCharacteristic = game.wfrp4e.config.characteristics[actorSkill.characteristic.value];\n    setupData.title = `${talent} (${skillCharacteristic})`;\n\n    return (await actor.setupCharacteristic(actorSkill.characteristic.value, setupData)).roll();\n  }\n}\n",
  "flags": {
    "wfrp4e-macros-and-more": {
      "version": "2.0.1"
    }
  },
  "folder": null,
  "img": "modules/wfrp4e-macros-and-more/assets/icons/roll-passive-talent.svg",
  "name": "Roll Passive Talent",
  "scope": "global",
  "type": "script",
  "_key": "!macros!XYrbBmTx4lG7YEQG"
}
