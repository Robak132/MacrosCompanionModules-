{
  "_id": "JWjzBGehkaWilWJo",
  "author": "MJAZjdKh3QKREKG2",
  "command": "/* ==========\n* MACRO: Consume Alcohol Macro\n* VERSION: 1.0\n* AUTHORS: @Robak132\n* DESCRIPTION: Automatically counts failures and adds modifiers.\n========== */\n\ngetDrunk();\n\nfunction findFailures() {\n  let ca1 = actor.actorEffects.filter(e => e.conditionId === 'consumealcohol1');\n  if (!!ca1.length) return 1;\n  let ca2 = actor.actorEffects.filter(e => e.conditionId === 'consumealcohol2');\n  if (!!ca2.length) return 2;\n  let ca3 = actor.actorEffects.filter(e => e.conditionId === 'consumealcohol3');\n  if (!!ca3.length) return ca3.length + 2;\n  return 0;\n}\n\nasync function addAlcoholModifiers(actor) {\n  let failures = findFailures();\n  if (failures === 0) {\n    actor.addSystemEffect('consumealcohol1');\n  } else if (failures < 3) {\n    actor.removeSystemEffect(`consumealcohol${failures}`);\n    actor.addSystemEffect(`consumealcohol${failures + 1}`);\n  } else {\n    await actor.updateEmbeddedDocuments('ActiveEffect', [\n      {\n        '_id': actor.actorEffects.find(e => e.conditionId === 'consumealcohol3' && e.disabled === false).id,\n        'disabled': true,\n      }]);\n    actor.addSystemEffect('consumealcohol3');\n  }\n  if (actor.characteristics.t.bonus <= failures + 1) {\n    game.tables.find(table => table.getFlag('wfrp4e', 'key') === 'stinking-drunk').draw();\n  }\n}\n\nasync function getDrunk() {\n  let characters = [];\n  if (game.user.character) {\n    // Get player's main character\n    characters.push(game.user.character);\n  } else if (canvas.tokens.controlled.length) {\n    // Get selected characters\n    characters = canvas.tokens.controlled.map(t => t.actor);\n  } else {\n    return ui.notifications.error('Select one or more characters on which you want to run this macro');\n  }\n\n  new Dialog({\n    title: 'Determine Beverage',\n    content: `\n     <form>\n      <div class=\"form-group\">\n        <select style=\"text-align: center\" name=\"inputStrength\">\n          <option value=\"easy\">Small Beer (+40)</option>\n          <option value=\"average\">Ale/Dwarf Beer/Wine (+20)</option>\n          <option value=\"challenging\">Strong Ale/Spirit/Brandy (+0)</option>\n          <option disabled>──────────</option>\n          <option value=\"bugman\">Bugman’s XXXXXX (+20x4)</option>\n        </select>\n      </div>\n    </form>`,\n    buttons: {\n      no: {\n        icon: '<i class=\"fas fa-times\"></i>',\n        label: 'Cancel',\n      },\n      yes: {\n        icon: '<i class=\"fas fa-check\"></i>',\n        label: 'Drink',\n        callback: async (html) => {\n          let brewStrength = html.find('[name=\"inputStrength\"]').val();\n          let tests = 1;\n          if (brewStrength === 'bugman') {\n            tests = 4;\n            brewStrength = 'average';\n          }\n\n          for (const actor of characters) {\n            for (let i = 0; i < tests; i++) {\n              let test = await actor.setupSkill(game.i18n.localize('NAME.ConsumeAlcohol'), {\n                bypass: false,\n                absolute: {difficulty: brewStrength},\n              });\n              await test.roll();\n              if (test.result.outcome === 'failure') {\n                await addAlcoholModifiers(actor);\n              }\n            }\n          }\n        },\n      },\n    },\n    default: 'yes',\n  }).render(true);\n}",
  "flags": {
    "wfrp4e-macros-and-more": {
      "version": "1.0"
    }
  },
  "folder": null,
  "img": "modules/wfrp4e-macros-and-more/assets/icons/consume-alcohol.svg",
  "name": "Consume Alcohol",
  "type": "script",
  "_key": "!macros!JWjzBGehkaWilWJo"
}
